{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/components/ElectionCard.tsx"],"sourcesContent":["\"use client\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport Image from 'next/image';\r\n\r\ninterface ElectionCardProps {\r\n  title: string;\r\n  description: string;\r\n  bannerUrl?: string;\r\n  openDate: string; // ISO string\r\n  endDate: string; // ISO string\r\n  status: 'Active' | 'Ended' | 'Upcoming';\r\n  onViewDetails?: () => void;\r\n}\r\n\r\nfunction getTimeLeft(endDate: string) {\r\n  const end = new Date(endDate).getTime();\r\n  const now = new Date().getTime();\r\n  let diff = Math.max(0, end - now);\r\n  const hours = Math.floor(diff / (1000 * 60 * 60));\r\n  diff -= hours * 1000 * 60 * 60;\r\n  const minutes = Math.floor(diff / (1000 * 60));\r\n  return `${hours}h ${minutes}m`;\r\n}\r\n\r\nconst ElectionCard: React.FC<ElectionCardProps> = ({\r\n  title,\r\n  description,\r\n  bannerUrl,\r\n  openDate,\r\n  endDate,\r\n  status,\r\n  onViewDetails,\r\n}) => {\r\n  const [timeLeft, setTimeLeft] = useState(getTimeLeft(endDate));\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(getTimeLeft(endDate));\r\n    }, 60000); // update every minute\r\n    return () => clearInterval(timer);\r\n  }, [endDate]);\r\n\r\n  return (\r\n    <div className=\"max-w-xs w-full bg-white rounded-2xl shadow p-0 overflow-hidden flex flex-col border border-gray-100\">\r\n      {/* Banner */}\r\n      <div className=\"w-full h-48 bg-gray-100 flex items-center justify-center relative\">\r\n        {bannerUrl ? (\r\n          <Image\r\n            src={bannerUrl}\r\n            alt=\"Election banner\"\r\n            fill\r\n            className=\"object-cover\"\r\n          />\r\n        ) : (\r\n          <svg className=\"w-16 h-16 text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\" strokeWidth=\"2\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 12h8M12 8v8\" />\r\n          </svg>\r\n        )}\r\n      </div>\r\n      {/* Content */}\r\n      <div className=\"flex-1 flex flex-col p-5 pb-3\">\r\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-1\">{title}</h3>\r\n        <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">{description}</p>\r\n        <div className=\"flex items-center justify-between text-xs text-gray-500 mb-2\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\r\n            <span>Opens: {new Date(openDate).toLocaleDateString()}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\r\n            <span>Ends In {timeLeft}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-between mt-2\">\r\n          <span className={`px-3 py-1 rounded-full text-xs font-medium border ${status === 'Active' ? 'bg-green-50 text-green-600 border-green-200' :\r\n            status === 'Ended' ? 'bg-gray-100 text-gray-500 border-gray-200' :\r\n              'bg-yellow-50 text-yellow-700 border-yellow-200'\r\n            }`}>\r\n            {status}\r\n          </span>\r\n          <button\r\n            className=\"text-xs text-gray-500 hover:underline font-medium\"\r\n            onClick={onViewDetails}\r\n            type=\"button\"\r\n          >\r\n            View details\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ElectionCard;"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAcA,SAAS,YAAY,OAAe;IAClC,MAAM,MAAM,IAAI,KAAK,SAAS,OAAO;IACrC,MAAM,MAAM,IAAI,OAAO,OAAO;IAC9B,IAAI,OAAO,KAAK,GAAG,CAAC,GAAG,MAAM;IAC7B,MAAM,QAAQ,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,EAAE;IAC/C,QAAQ,QAAQ,OAAO,KAAK;IAC5B,MAAM,UAAU,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE;IAC5C,OAAO,GAAG,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;AAChC;AAEA,MAAM,eAA4C,CAAC,EACjD,KAAK,EACL,WAAW,EACX,SAAS,EACT,QAAQ,EACR,OAAO,EACP,MAAM,EACN,aAAa,EACd;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,YAAY;IAErD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,YAAY;YACxB,YAAY,YAAY;QAC1B,GAAG,QAAQ,sBAAsB;QACjC,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAQ;IAEZ,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACZ,0BACC,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK;oBACL,KAAI;oBACJ,IAAI;oBACJ,WAAU;;;;;yCAGZ,8OAAC;oBAAI,WAAU;oBAA0B,MAAK;oBAAO,SAAQ;oBAAY,QAAO;;sCAC9E,8OAAC;4BAAO,IAAG;4BAAK,IAAG;4BAAK,GAAE;4BAAK,aAAY;;;;;;sCAC3C,8OAAC;4BAAK,eAAc;4BAAQ,gBAAe;4BAAQ,aAAY;4BAAI,GAAE;;;;;;;;;;;;;;;;;0BAK3E,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA4C;;;;;;kCAC1D,8OAAC;wBAAE,WAAU;kCAA2C;;;;;;kCACxD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;wCAAe,MAAK;wCAAO,QAAO;wCAAe,aAAY;wCAAI,SAAQ;kDAAY,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,GAAE;;;;;;;;;;;kDACzJ,8OAAC;;4CAAK;4CAAQ,IAAI,KAAK,UAAU,kBAAkB;;;;;;;;;;;;;0CAErD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;wCAAe,MAAK;wCAAO,QAAO;wCAAe,aAAY;wCAAI,SAAQ;kDAAY,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,GAAE;;;;;;;;;;;kDACzJ,8OAAC;;4CAAK;4CAAS;;;;;;;;;;;;;;;;;;;kCAGnB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAW,CAAC,kDAAkD,EAAE,WAAW,WAAW,gDAC1F,WAAW,UAAU,8CACnB,kDACA;0CACD;;;;;;0CAEH,8OAAC;gCACC,WAAU;gCACV,SAAS;gCACT,MAAK;0CACN;;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/data/electionData.ts"],"sourcesContent":["import { Candidate, Election } from '../types/election';\r\n\r\nexport const sponsoredCandidates: Candidate[] = [\r\n  {\r\n    name: 'George Denis Mavo',\r\n    position: 'SRC PRESIDENT (Hopeful)',\r\n    image: '/assets/candidate1.png'\r\n  },\r\n  {\r\n    name: 'Sarah Ann Wilson',\r\n    position: 'GEN. SECRETARY (Hopeful)',\r\n    image: '/assets/candidate2.png'\r\n  },\r\n  {\r\n    name: 'Paul Simon Avera',\r\n    position: 'SRC PRESIDENT (Hopeful)',\r\n    image: '/assets/candidate6.png'\r\n  },\r\n  {\r\n    name: 'John Van Pelt',\r\n    position: 'SRC TREASURER (Hopeful)',\r\n    image: '/assets/candidate4.png'\r\n  }\r\n];\r\n\r\nexport const electionData: Election[] = [\r\n  {\r\n    id: 'gctu-src-2023',\r\n    type: 'GCTU GENERAL SRC ELECTIONS',\r\n    date: '07 Oct, 2023',\r\n    status: 'ENDED',\r\n    pollingStation: 'Main Campus',\r\n    startTime: '2023-10-07',\r\n    endTime: '2023-10-07',\r\n    candidate: {\r\n      name: 'Robert Mercer',\r\n      image: '/assets/flyer.jpg'\r\n    }\r\n  },\r\n  {\r\n    id: 'bsc-cs-course-rep-2023',\r\n    type: 'BSC COMPUTER SCIENCE COURSE REP ELECTION',\r\n    date: '14 Oct, 2023',\r\n    status: 'ACTIVE',\r\n    pollingStation: 'Main Campus',\r\n    startTime: '2023-10-14',\r\n    endTime: '2023-10-14',\r\n    candidate: {\r\n      name: 'Sarah Wilson',\r\n      image: '/assets/campaign.jpeg'\r\n    }\r\n  },\r\n  {\r\n    id: 'gesa-general-2023',\r\n    type: 'GESA GENERAL ELECTIONS',\r\n    date: '07 Oct, 2023',\r\n    status: 'PENDING',\r\n    pollingStation: 'Main Campus',\r\n    startTime: '2023-10-07',\r\n    endTime: '2023-10-07',\r\n    candidate: {\r\n      name: 'Robert Mercer',\r\n      image: '/assets/election.jpeg'\r\n    }\r\n  }\r\n];\r\n\r\nexport const pollingStations = ['Main Campus', 'Science Block', 'Engineering Block', 'Business School'];\r\nexport const electionTypes = ['SRC Elections', 'Department Elections', 'Course Rep Elections'];"],"names":[],"mappings":";;;;;;AAEO,MAAM,sBAAmC;IAC9C;QACE,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA;QACE,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA;QACE,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA;QACE,MAAM;QACN,UAAU;QACV,OAAO;IACT;CACD;AAEM,MAAM,eAA2B;IACtC;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;QAChB,WAAW;QACX,SAAS;QACT,WAAW;YACT,MAAM;YACN,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;QAChB,WAAW;QACX,SAAS;QACT,WAAW;YACT,MAAM;YACN,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;QAChB,WAAW;QACX,SAAS;QACT,WAAW;YACT,MAAM;YACN,OAAO;QACT;IACF;CACD;AAEM,MAAM,kBAAkB;IAAC;IAAe;IAAiB;IAAqB;CAAkB;AAChG,MAAM,gBAAgB;IAAC;IAAiB;IAAwB;CAAuB","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/components/ElectionDetail.tsx"],"sourcesContent":["'use client';\r\nimport React from 'react';\r\nimport { electionData } from '../data/electionData';\r\nimport Image from 'next/image';\r\nimport { FiArrowLeft, FiCheckCircle, FiBookmark, FiInfo, FiAward, FiLock } from 'react-icons/fi';\r\n\r\ninterface ElectionDetailProps {\r\n  electionId: string;\r\n  onBack: () => void;\r\n}\r\n\r\n// Mock candidates for display purposes\r\nconst mockCandidates = [\r\n  {\r\n    name: 'Alice Williams',\r\n    position: 'Computer Science',\r\n    image: '/assets/candidate1.png',\r\n  },\r\n  {\r\n    name: 'Robert Johnson',\r\n    position: 'Computer Science',\r\n    image: '/assets/candidate2.png',\r\n  },\r\n  {\r\n    name: 'Emily Brown',\r\n    position: 'Computer Science',\r\n    image: '/assets/candidate6.png',\r\n  },\r\n  {\r\n    name: 'Michael Davis',\r\n    position: 'Computer Science',\r\n    image: '/assets/candidate4.png',\r\n  },\r\n];\r\n\r\nconst ElectionDetail: React.FC<ElectionDetailProps> = ({ electionId, onBack }) => {\r\n  const election = electionData.find((e) => e.id === electionId);\r\n\r\n  if (!election) {\r\n    return <div>Election not found</div>;\r\n  }\r\n\r\n  const isLive = election.status === 'ACTIVE';\r\n\r\n  const voterStatus = [\r\n    { icon: <FiCheckCircle />, label: 'SBT Issued', status: 'Issued', color: 'text-green-500' },\r\n    { icon: <FiBookmark />, label: 'Voting Ticket', status: 'Available', color: 'text-green-500' },\r\n    { icon: <FiInfo />, label: 'Vote', status: 'Pending', color: 'text-yellow-500' },\r\n    { icon: <FiLock />, label: 'Merkle Proof', status: 'Not available', color: 'text-gray-400' },\r\n    { icon: <FiAward />, label: 'POAP', status: 'Not available', color: 'text-gray-400' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n      <button onClick={onBack} className=\"flex items-center text-gray-500 hover:text-gray-700 mb-6\">\r\n        <FiArrowLeft className=\"mr-2\" />\r\n        Back to Elections\r\n      </button>\r\n\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-3xl sm:text-4xl font-bold text-gray-800\">{election.type}</h1>\r\n        <p className=\"text-gray-500 mt-2\">{election.date}</p>\r\n        <span\r\n          className={`mt-4 inline-block px-4 py-1.5 rounded-full text-sm font-medium ${isLive ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'}`}>\r\n          {isLive ? 'Ongoing' : election.status}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        {/* Left Column: Candidates */}\r\n        <div className=\"lg:col-span-2\">\r\n          <div className=\"bg-white rounded-xl shadow-md p-6\">\r\n            <h2 className=\"text-2xl font-semibold mb-2\">Approved Candidates</h2>\r\n            <p className=\"text-gray-600 mb-6\">Election for the position of {election.type}. Vote for the candidate of your choice.</p>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\r\n              {/* Display multiple candidates */}\r\n              {mockCandidates.map((candidate, index) => (\r\n                <div key={index} className=\"bg-white rounded-lg border border-gray-200 p-4 text-center\">\r\n                  <div className=\"w-24 h-24 mx-auto mb-4 relative\">\r\n                    <Image\r\n                      src={candidate.image}\r\n                      alt={candidate.name}\r\n                      fill\r\n                      className=\"object-cover rounded-full\"\r\n                    />\r\n                  </div>\r\n                  <h3 className=\"text-lg font-bold\">{candidate.name}</h3>\r\n                  <p className=\"text-gray-500 text-sm mb-4\">{candidate.position}</p>\r\n                  {/* <button className=\"w-full py-2 px-4 rounded-lg border border-gray-300 hover:bg-gray-50 text-sm mb-2\">\r\n                    Manifesto\r\n                  </button> */}\r\n                  <button\r\n                    className={`w-full py-2 px-4 rounded-lg text-white font-semibold text-sm transition-colors ${isLive ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-300 cursor-not-allowed'}`}>\r\n                    Vote\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Column: Voter Status */}\r\n        <div className=\"lg:col-span-1\">\r\n          <div className=\"bg-white rounded-xl shadow-md p-6\">\r\n            <h3 className=\"font-bold text-xl mb-4\">Voter Status</h3>\r\n            <ul className=\"space-y-4\">\r\n              {voterStatus.map((item, index) => (\r\n                <li key={index} className=\"flex justify-between items-center text-sm\">\r\n                  <div className=\"flex items-center\">\r\n                    <span className={`mr-3 ${item.color}`}>{item.icon}</span>\r\n                    <span className=\"text-gray-700\">{item.label}</span>\r\n                  </div>\r\n                  <span className=\"text-gray-500 font-medium\">{item.status}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ElectionDetail;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/components/Elections.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { motion } from 'framer-motion';\r\nimport ElectionCard from './ElectionCard';\r\nimport { electionData, sponsoredCandidates, pollingStations, electionTypes } from '../data/electionData';\r\nimport ElectionDetail from './ElectionDetail'; \r\n\r\n// Helper to map status\r\nfunction mapStatus(status: string): 'Active' | 'Ended' | 'Upcoming' {\r\n  if (status === 'ACTIVE') return 'Active';\r\n  if (status === 'ENDED') return 'Ended';\r\n  return 'Upcoming';\r\n}\r\n\r\nexport default function Elections() {\r\n  const [currentPage] = useState(0);\r\n  const [searchParams, setSearchParams] = useState({\r\n    electionType: '',\r\n    dateOfElection: '',\r\n    pollingStation: ''\r\n  });\r\n  const [selectedElectionId, setSelectedElectionId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      () => {},\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    const sponsoredSection = document.querySelector('.sponsored-section');\r\n    if (sponsoredSection) {\r\n      observer.observe(sponsoredSection);\r\n    }\r\n\r\n    return () => {\r\n      if (sponsoredSection) {\r\n        observer.unobserve(sponsoredSection);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  if (selectedElectionId) {\r\n    return <ElectionDetail electionId={selectedElectionId} onBack={() => setSelectedElectionId(null)} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col space-y-8 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n      {/* Sponsored Ads Section */}\r\n      <section className=\"sponsored-section pt-4 overflow-hidden\">\r\n        <h5 className=\"text-sm text-gray-600 font-medium mb-6\">Sponsored Ads</h5>\r\n        <div className=\"relative whitespace-nowrap\">\r\n          <motion.div\r\n            className=\"gap-4 inline-flex\"\r\n            animate={{\r\n              x: [\"-100%\", \"0%\"],\r\n            }}\r\n            transition={{\r\n              x: {\r\n                duration: 20,\r\n                repeat: Infinity,\r\n                ease: \"linear\"\r\n              }\r\n            }}\r\n          >\r\n            {[...sponsoredCandidates, ...sponsoredCandidates].map((candidate, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"flex-none w-32 bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-all\"\r\n              >\r\n                <div className=\"relative w-full aspect-[4/3] mb-3\">\r\n                  <Image\r\n                    src={candidate.image}\r\n                    alt={candidate.name}\r\n                    className=\"rounded-lg object-cover\"\r\n                    fill\r\n                    sizes=\"256px\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-[8px] text-gray-600\">{candidate.position}</p>\r\n                  <h3 className=\"text-[9px] text-gray-600 mt-1\">{candidate.name}</h3>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </motion.div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Current Elections Section */}\r\n      <section className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {electionData.slice(currentPage * 3, (currentPage + 1) * 3).map((election) => (\r\n          <ElectionCard\r\n            key={election.id}\r\n            title={election.type}\r\n            description={`Polling Station: ${election.pollingStation}`}\r\n            bannerUrl={election.candidate.image}\r\n            openDate={new Date().toISOString()} // Replace with actual open date if available\r\n            endDate={new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString()} // Example: 2 hours from now\r\n            status={mapStatus(election.status)}\r\n            onViewDetails={() => setSelectedElectionId(election.id)}\r\n          />\r\n        ))}\r\n      </section>\r\n\r\n      {/* Search Section */}\r\n      <section className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n        <h3 className=\"text-base font-medium text-gray-900 mb-6\">Search Election Updates</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n          <select\r\n            className=\"w-full px-3 py-2 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n            value={searchParams.electionType}\r\n            onChange={(e) => setSearchParams({ ...searchParams, electionType: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Election Type</option>\r\n            {electionTypes.map((type, index) => (\r\n              <option key={index} value={type}>{type}</option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"date\"\r\n            className=\"w-full px-3 py-2 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n            value={searchParams.dateOfElection}\r\n            onChange={(e) => setSearchParams({ ...searchParams, dateOfElection: e.target.value })}\r\n          />\r\n          <select\r\n            className=\"w-full px-3 py-2 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n            value={searchParams.pollingStation}\r\n            onChange={(e) => setSearchParams({ ...searchParams, pollingStation: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Polling Station</option>\r\n            {pollingStations.map((station, index) => (\r\n              <option key={index} value={station}>{station}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Election Updates Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead>\r\n              <tr className=\"text-left border-b border-gray-100\">\r\n                <th className=\"pb-3 text-sm font-medium text-gray-600\">Election Type</th>\r\n                <th className=\"pb-3 text-sm font-medium text-gray-600\">Polling Station</th>\r\n                <th className=\"pb-3 text-sm font-medium text-gray-600\">Date of Election</th>\r\n                <th className=\"pb-3 text-sm font-medium text-gray-600\">Start Time</th>\r\n                <th className=\"pb-3 text-sm font-medium text-gray-600\">End Time</th>\r\n                <th className=\"pb-3 text-sm font-medium text-gray-600\">STATUS</th>\r\n                <th className=\"pb-3\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {electionData.map((election, index) => (\r\n                <tr key={index} className=\"border-b border-gray-50 hover:bg-gray-50/50\">\r\n                  <td className=\"py-4 text-gray-400 text-sm\">{election.type}</td>\r\n                  <td className=\"py-4 text-gray-400 text-sm\">{election.pollingStation}</td>\r\n                  <td className=\"py-4 text-gray-400 text-sm\">{election.date}</td>\r\n                  <td className=\"py-4 text-gray-400 text-sm\">{election.startTime}</td>\r\n                  <td className=\"py-4 text-gray-400 text-sm\">{election.endTime}</td>\r\n                  <td className=\"py-4\">\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${election.status === 'ENDED' ? 'bg-green-50 text-green-700' :\r\n                      election.status === 'PENDING' ? 'bg-red-50 text-red-700' :\r\n                        'bg-yellow-50 text-yellow-700'\r\n                      }`}>\r\n                      {election.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"py-4\">\r\n                    <button className=\"text-blue-500 text-sm hover:text-blue-600 transition-colors\">\r\n                      View Details\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"text-center text-gray-400 text-sm py-4 border-t border-gray-100\">\r\n        2025 © All Rights Reserved\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/components/Notification.tsx"],"sourcesContent":["'use client';\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { FiBell, FiCheck, FiInfo, FiAlertCircle } from 'react-icons/fi';\r\n\r\ninterface NotificationItem {\r\n  id: string;\r\n  type: 'info' | 'success' | 'warning';\r\n  title: string;\r\n  message: string;\r\n  timestamp: string;\r\n  isRead: boolean;\r\n}\r\n\r\nconst mockNotifications: NotificationItem[] = [\r\n  {\r\n    id: '1',\r\n    type: 'info',\r\n    title: 'New Election Created',\r\n    message: 'SRC Presidential Election has been scheduled for August 15th, 2025',\r\n    timestamp: '2 days ago',\r\n    isRead: false\r\n  },\r\n  {\r\n    id: '2',\r\n    type: 'success',\r\n    title: 'Vote Confirmed',\r\n    message: 'Your vote for the Department Representative has been recorded successfully',\r\n    timestamp: '1 mins ago',\r\n    isRead: true\r\n  },\r\n  {\r\n    id: '3',\r\n    type: 'warning',\r\n    title: 'Verification Required',\r\n    message: 'Please complete your KYC verification to participate in upcoming elections',\r\n    timestamp: '2 hours ago',\r\n    isRead: false\r\n  }\r\n];\r\n\r\nconst getIcon = (type: string) => {\r\n  switch (type) {\r\n    case 'success':\r\n      return <FiCheck className=\"text-green-500\" size={20} />;\r\n    case 'warning':\r\n      return <FiAlertCircle className=\"text-yellow-500\" size={20} />;\r\n    default:\r\n      return <FiInfo className=\"text-blue-500\" size={20} />;\r\n  }\r\n};\r\n\r\nconst Notification = () => {\r\n  return (\r\n    <div className=\"w-full max-w-4xl mx-auto\">\r\n      <div className=\"bg-white rounded-xl shadow-sm p-6\">\r\n        <div className=\"flex items-center justify-between mb-8\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <FiBell className=\"text-gray-600\" size={24} />\r\n            <h2 className=\"text-2xl font-bold text-gray-800\">Notifications</h2>\r\n          </div>\r\n          <button className=\"text-sm text-blue-600 hover:text-blue-700\">\r\n            Mark all as read\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          {mockNotifications.map((notification) => (\r\n            <motion.div\r\n              key={notification.id}\r\n              initial={{ opacity: 0, y: 10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className={`p-4 rounded-lg border ${\r\n                notification.isRead ? 'bg-gray-50' : 'bg-white'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-start space-x-4\">\r\n                <div className=\"p-2 rounded-full bg-gray-100\">\r\n                  {getIcon(notification.type)}\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <h3 className=\"font-semibold text-gray-900\">\r\n                      {notification.title}\r\n                    </h3>\r\n                    <span className=\"text-sm text-gray-500\">\r\n                      {notification.timestamp}\r\n                    </span>\r\n                  </div>\r\n                  <p className=\"mt-1 text-gray-600\">{notification.message}</p>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-center\">\r\n          <button className=\"text-sm text-gray-600 hover:text-gray-800\">\r\n            View all notifications\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAcA,MAAM,oBAAwC;IAC5C;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,SAAS;QACT,WAAW;QACX,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,SAAS;QACT,WAAW;QACX,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,SAAS;QACT,WAAW;QACX,QAAQ;IACV;CACD;AAED,MAAM,UAAU,CAAC;IACf,OAAQ;QACN,KAAK;YACH,qBAAO,8OAAC,8IAAA,CAAA,UAAO;gBAAC,WAAU;gBAAiB,MAAM;;;;;;QACnD,KAAK;YACH,qBAAO,8OAAC,8IAAA,CAAA,gBAAa;gBAAC,WAAU;gBAAkB,MAAM;;;;;;QAC1D;YACE,qBAAO,8OAAC,8IAAA,CAAA,SAAM;gBAAC,WAAU;gBAAgB,MAAM;;;;;;IACnD;AACF;AAEA,MAAM,eAAe;IACnB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,8IAAA,CAAA,SAAM;oCAAC,WAAU;oCAAgB,MAAM;;;;;;8CACxC,8OAAC;oCAAG,WAAU;8CAAmC;;;;;;;;;;;;sCAEnD,8OAAC;4BAAO,WAAU;sCAA4C;;;;;;;;;;;;8BAKhE,8OAAC;oBAAI,WAAU;8BACZ,kBAAkB,GAAG,CAAC,CAAC,6BACtB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BAET,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAG;4BAC7B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,WAAW,CAAC,sBAAsB,EAChC,aAAa,MAAM,GAAG,eAAe,YACrC;sCAEF,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACZ,QAAQ,aAAa,IAAI;;;;;;kDAE5B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEACX,aAAa,KAAK;;;;;;kEAErB,8OAAC;wDAAK,WAAU;kEACb,aAAa,SAAS;;;;;;;;;;;;0DAG3B,8OAAC;gDAAE,WAAU;0DAAsB,aAAa,OAAO;;;;;;;;;;;;;;;;;;2BApBtD,aAAa,EAAE;;;;;;;;;;8BA2B1B,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAO,WAAU;kCAA4C;;;;;;;;;;;;;;;;;;;;;;AAOxE;uCAEe","debugId":null}},
    {"offset": {"line": 1367, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/components/FAQ-Terms.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { \r\n  FiChevronDown, \r\n  FiCheckCircle, \r\n  FiUser, \r\n  FiLock, \r\n  FiShield, \r\n  FiAward,\r\n  FiClock,\r\n  FiAlertCircle,\r\n  FiX\r\n} from 'react-icons/fi';\r\n\r\ninterface FAQItem {\r\n  question: string;\r\n  answer: string;\r\n  category: 'voting' | 'wallet' | 'tokens' | 'general';\r\n}\r\n\r\nconst faqItems: FAQItem[] = [\r\n  {\r\n    question: \"How do I start the voting process?\",\r\n    answer: \"First, sign in with your valid Index Number. Once authenticated, you'll be directed to the dashboard where you can connect your Web3 wallet. This wallet connection is essential for receiving the soul-bound token needed for voting.\",\r\n    category: 'voting'\r\n  },\r\n  {\r\n    question: \"What is a Soul-bound Token (SBT)?\",\r\n    answer: \"A Soul-bound Token is a special non-transferable token that will be minted to your wallet when you're ready to vote. This token serves as your digital voting credential and expires after you cast your vote.\",\r\n    category: 'tokens'\r\n  },\r\n  {\r\n    question: \"How do I connect my Web3 wallet?\",\r\n    answer: \"In your dashboard, click on 'Connect Wallet'. You'll need MetaMask or another compatible Web3 wallet. Follow the prompts to connect your wallet securely.\",\r\n    category: 'wallet'\r\n  },\r\n  {\r\n    question: \"What happens after I vote?\",\r\n    answer: \"After casting your vote, your Soul-bound Token will automatically expire. Once the election ends, you'll receive a POAP (Proof of Attendance Protocol) token as proof of your participation.\",\r\n    category: 'voting'\r\n  },\r\n  {\r\n    question: \"What is a POAP?\",\r\n    answer: \"POAP (Proof of Attendance Protocol) is a special NFT that proves your participation in the election. It serves as a permanent record of your civic engagement.\",\r\n    category: 'tokens'\r\n  }\r\n];\r\n\r\nconst FAQ_Terms = () => {\r\n  const [openItems, setOpenItems] = useState<Set<number>>(new Set());\r\n\r\n  const toggleItem = (index: number) => {\r\n    setOpenItems((prev) => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(index)) {\r\n        newSet.delete(index);\r\n      } else {\r\n        newSet.add(index);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n  const [acceptedTerms, setAcceptedTerms] = useState(false);\r\n  const [showTermsModal, setShowTermsModal] = useState(false);\r\n  const [activeStep, setActiveStep] = useState<number | null>(null);\r\n\r\n  const steps = [\r\n    { \r\n      icon: <FiUser className=\"w-6 h-6\" />, \r\n      text: \"Sign in with Index Number\",\r\n      description: \"Authenticate using your valid student credentials\"\r\n    },\r\n    { \r\n      icon: <FiLock className=\"w-6 h-6\" />, \r\n      text: \"Connect Web3 Wallet\",\r\n      description: \"Link your MetaMask or compatible wallet\"\r\n    },\r\n    { \r\n      icon: <FiShield className=\"w-6 h-6\" />, \r\n      text: \"Receive Soul-bound Token\",\r\n      description: \"Get your unique voting credential\"\r\n    },\r\n    { \r\n      icon: <FiClock className=\"w-6 h-6\" />, \r\n      text: \"Cast Your Vote\",\r\n      description: \"Make your choice in the election\"\r\n    },\r\n    { \r\n      icon: <FiAward className=\"w-6 h-6\" />, \r\n      text: \"Receive POAP\",\r\n      description: \"Get your proof of participation\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto px-4 py-8\">\r\n      {/* Header Section with Gradient */}\r\n      <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl p-8 shadow-lg mb-8 text-white\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">FAQ & Terms</h1>\r\n        <p className=\"text-white/90\">\r\n          Understand our secure blockchain-based voting process and learn how to participate in elections.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Interactive Timeline */}\r\n      <div className=\"bg-white rounded-xl p-8 shadow-lg mb-8 relative overflow-hidden\">\r\n        <div className=\"absolute top-0 right-0 w-64 h-64 bg-blue-50 rounded-full -mr-32 -mt-32 opacity-20\" />\r\n        <h2 className=\"text-2xl font-semibold mb-8 relative\">Voting Process</h2>\r\n        <div className=\"space-y-6\">\r\n          {steps.map((step, index) => (\r\n            <motion.div\r\n              key={index}\r\n              className=\"relative\"\r\n              onHoverStart={() => setActiveStep(index)}\r\n              onHoverEnd={() => setActiveStep(null)}\r\n            >\r\n              <div className=\"flex items-center space-x-4\">\r\n                <motion.div\r\n                  className={`p-3 rounded-full ${\r\n                    activeStep === index \r\n                      ? 'bg-blue-500 text-white' \r\n                      : 'bg-blue-100 text-blue-500'\r\n                  } transition-colors duration-200`}\r\n                >\r\n                  {step.icon}\r\n                </motion.div>\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"font-medium text-gray-900\">{step.text}</h3>\r\n                  <motion.p\r\n                    initial={{ height: 0, opacity: 0 }}\r\n                    animate={{ \r\n                      height: activeStep === index ? 'auto' : 0,\r\n                      opacity: activeStep === index ? 1 : 0\r\n                    }}\r\n                    className=\"text-sm text-gray-600 overflow-hidden\"\r\n                  >\r\n                    {step.description}\r\n                  </motion.p>\r\n                </div>\r\n              </div>\r\n              {index < steps.length - 1 && (\r\n                <div className=\"absolute left-6 top-14 w-0.5 h-8 bg-blue-100\" />\r\n              )}\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Enhanced FAQ Section */}\r\n      <div className=\"bg-white rounded-xl p-8 shadow-lg mb-8\">\r\n        <h2 className=\"text-2xl font-semibold mb-6\">Frequently Asked Questions</h2>\r\n        <div className=\"space-y-4\">\r\n          {faqItems.map((item, index) => (\r\n            <motion.div\r\n              key={index}\r\n              className=\"border border-gray-100 rounded-xl overflow-hidden hover:border-blue-200 transition-colors duration-200\"\r\n              initial={false}\r\n            >\r\n              <button\r\n                className=\"w-full flex items-center justify-between p-5 text-left hover:bg-gray-50 transition-colors duration-200\"\r\n                onClick={() => toggleItem(index)}\r\n              >\r\n                <span className=\"font-medium text-gray-900\">{item.question}</span>\r\n                <motion.div\r\n                  animate={{ rotate: openItems.has(index) ? 180 : 0 }}\r\n                  transition={{ duration: 0.2 }}\r\n                  className=\"text-blue-500\"\r\n                >\r\n                  <FiChevronDown />\r\n                </motion.div>\r\n              </button>\r\n              <AnimatePresence>\r\n                {openItems.has(index) && (\r\n                  <motion.div\r\n                    initial={{ height: 0, opacity: 0 }}\r\n                    animate={{ height: \"auto\", opacity: 1 }}\r\n                    exit={{ height: 0, opacity: 0 }}\r\n                    transition={{ duration: 0.2 }}\r\n                    className=\"px-5 pb-5\"\r\n                  >\r\n                    <p className=\"text-gray-600 leading-relaxed\">{item.answer}</p>\r\n                  </motion.div>\r\n                )}\r\n              </AnimatePresence>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modern Terms and Conditions */}\r\n      <div className=\"bg-white rounded-xl p-8 shadow-lg\">\r\n        <div className=\"flex items-center space-x-3 mb-6\">\r\n          <FiAlertCircle className=\"text-blue-500 w-6 h-6\" />\r\n          <h2 className=\"text-2xl font-semibold\">Terms and Conditions</h2>\r\n        </div>\r\n        <div className=\"flex items-start space-x-3 mb-6\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"terms\"\r\n            checked={acceptedTerms}\r\n            onChange={(e) => setAcceptedTerms(e.target.checked)}\r\n            className=\"mt-1.5 h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n          />\r\n          <label htmlFor=\"terms\" className=\"text-gray-600\">\r\n            I have read and agree to the terms and conditions of using TrustVote for election participation.\r\n          </label>\r\n        </div>\r\n        <button\r\n          onClick={() => setShowTermsModal(true)}\r\n          className=\"text-blue-600 hover:text-blue-700 font-medium transition-colors duration-200\"\r\n        >\r\n          View full terms\r\n        </button>\r\n      </div>\r\n\r\n      {/* Enhanced Terms Modal */}\r\n      <AnimatePresence>\r\n        {showTermsModal && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4 z-50\"\r\n          >\r\n            <motion.div\r\n              initial={{ scale: 0.95, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              exit={{ scale: 0.95, opacity: 0 }}\r\n              className=\"bg-white rounded-2xl p-8 max-w-2xl w-full max-h-[80vh] overflow-y-auto relative\"\r\n            >\r\n              <button\r\n                onClick={() => setShowTermsModal(false)}\r\n                className=\"absolute top-4 right-4 p-2 rounded-full hover:bg-gray-100 transition-colors duration-200\"\r\n              >\r\n                <FiX className=\"w-5 h-5\" />\r\n              </button>\r\n              <h3 className=\"text-2xl font-semibold mb-6\">Terms and Conditions</h3>\r\n              <div className=\"prose prose-blue max-w-none\">\r\n                <p className=\"text-gray-600 mb-4\">By using TrustVote, you agree to:</p>\r\n                <ul className=\"space-y-3\">\r\n                  <li className=\"flex items-center space-x-2\">\r\n                    <FiCheckCircle className=\"text-green-500 flex-shrink-0\" />\r\n                    <span>Provide accurate identification information</span>\r\n                  </li>\r\n                  <li className=\"flex items-center space-x-2\">\r\n                    <FiCheckCircle className=\"text-green-500 flex-shrink-0\" />\r\n                    <span>Use only one wallet address for voting</span>\r\n                  </li>\r\n                  <li className=\"flex items-center space-x-2\">\r\n                    <FiCheckCircle className=\"text-green-500 flex-shrink-0\" />\r\n                    <span>Not attempt to manipulate the voting process</span>\r\n                  </li>\r\n                  <li className=\"flex items-center space-x-2\">\r\n                    <FiCheckCircle className=\"text-green-500 flex-shrink-0\" />\r\n                    <span>Accept the finality of the voting results</span>\r\n                  </li>\r\n                  <li className=\"flex items-center space-x-2\">\r\n                    <FiCheckCircle className=\"text-green-500 flex-shrink-0\" />\r\n                    <span>Maintain the confidentiality of your voting credentials</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <button\r\n                onClick={() => setShowTermsModal(false)}\r\n                className=\"mt-8 w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 rounded-xl font-medium hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl\"\r\n              >\r\n                I Understand\r\n              </button>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQ_Terms;"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;AAHA;;;;;AAqBA,MAAM,WAAsB;IAC1B;QACE,UAAU;QACV,QAAQ;QACR,UAAU;IACZ;IACA;QACE,UAAU;QACV,QAAQ;QACR,UAAU;IACZ;IACA;QACE,UAAU;QACV,QAAQ;QACR,UAAU;IACZ;IACA;QACE,UAAU;QACV,QAAQ;QACR,UAAU;IACZ;IACA;QACE,UAAU;QACV,QAAQ;QACR,UAAU;IACZ;CACD;AAED,MAAM,YAAY;IAChB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IAE5D,MAAM,aAAa,CAAC;QAClB,aAAa,CAAC;YACZ,MAAM,SAAS,IAAI,IAAI;YACvB,IAAI,OAAO,GAAG,CAAC,QAAQ;gBACrB,OAAO,MAAM,CAAC;YAChB,OAAO;gBACL,OAAO,GAAG,CAAC;YACb;YACA,OAAO;QACT;IACF;IACA,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAE5D,MAAM,QAAQ;QACZ;YACE,oBAAM,8OAAC,8IAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;YACxB,MAAM;YACN,aAAa;QACf;QACA;YACE,oBAAM,8OAAC,8IAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;YACxB,MAAM;YACN,aAAa;QACf;QACA;YACE,oBAAM,8OAAC,8IAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;YAC1B,MAAM;YACN,aAAa;QACf;QACA;YACE,oBAAM,8OAAC,8IAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;YACzB,MAAM;YACN,aAAa;QACf;QACA;YACE,oBAAM,8OAAC,8IAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;YACzB,MAAM;YACN,aAAa;QACf;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;0BAM/B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,8OAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gCAET,WAAU;gCACV,cAAc,IAAM,cAAc;gCAClC,YAAY,IAAM,cAAc;;kDAEhC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gDACT,WAAW,CAAC,iBAAiB,EAC3B,eAAe,QACX,2BACA,4BACL,+BAA+B,CAAC;0DAEhC,KAAK,IAAI;;;;;;0DAEZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAA6B,KAAK,IAAI;;;;;;kEACpD,8OAAC,0LAAA,CAAA,SAAM,CAAC,CAAC;wDACP,SAAS;4DAAE,QAAQ;4DAAG,SAAS;wDAAE;wDACjC,SAAS;4DACP,QAAQ,eAAe,QAAQ,SAAS;4DACxC,SAAS,eAAe,QAAQ,IAAI;wDACtC;wDACA,WAAU;kEAET,KAAK,WAAW;;;;;;;;;;;;;;;;;;oCAItB,QAAQ,MAAM,MAAM,GAAG,mBACtB,8OAAC;wCAAI,WAAU;;;;;;;+BA9BZ;;;;;;;;;;;;;;;;0BAsCb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,MAAM,sBACnB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gCAET,WAAU;gCACV,SAAS;;kDAET,8OAAC;wCACC,WAAU;wCACV,SAAS,IAAM,WAAW;;0DAE1B,8OAAC;gDAAK,WAAU;0DAA6B,KAAK,QAAQ;;;;;;0DAC1D,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gDACT,SAAS;oDAAE,QAAQ,UAAU,GAAG,CAAC,SAAS,MAAM;gDAAE;gDAClD,YAAY;oDAAE,UAAU;gDAAI;gDAC5B,WAAU;0DAEV,cAAA,8OAAC,8IAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;kDAGlB,8OAAC,yLAAA,CAAA,kBAAe;kDACb,UAAU,GAAG,CAAC,wBACb,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4CACT,SAAS;gDAAE,QAAQ;gDAAG,SAAS;4CAAE;4CACjC,SAAS;gDAAE,QAAQ;gDAAQ,SAAS;4CAAE;4CACtC,MAAM;gDAAE,QAAQ;gDAAG,SAAS;4CAAE;4CAC9B,YAAY;gDAAE,UAAU;4CAAI;4CAC5B,WAAU;sDAEV,cAAA,8OAAC;gDAAE,WAAU;0DAAiC,KAAK,MAAM;;;;;;;;;;;;;;;;;+BA1B1D;;;;;;;;;;;;;;;;0BAoCb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,8IAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,8OAAC;gCAAG,WAAU;0CAAyB;;;;;;;;;;;;kCAEzC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,IAAG;gCACH,SAAS;gCACT,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,OAAO;gCAClD,WAAU;;;;;;0CAEZ,8OAAC;gCAAM,SAAQ;gCAAQ,WAAU;0CAAgB;;;;;;;;;;;;kCAInD,8OAAC;wBACC,SAAS,IAAM,kBAAkB;wBACjC,WAAU;kCACX;;;;;;;;;;;;0BAMH,8OAAC,yLAAA,CAAA,kBAAe;0BACb,gCACC,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAE;oBACtB,MAAM;wBAAE,SAAS;oBAAE;oBACnB,WAAU;8BAEV,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,OAAO;4BAAM,SAAS;wBAAE;wBACnC,SAAS;4BAAE,OAAO;4BAAG,SAAS;wBAAE;wBAChC,MAAM;4BAAE,OAAO;4BAAM,SAAS;wBAAE;wBAChC,WAAU;;0CAEV,8OAAC;gCACC,SAAS,IAAM,kBAAkB;gCACjC,WAAU;0CAEV,cAAA,8OAAC,8IAAA,CAAA,MAAG;oCAAC,WAAU;;;;;;;;;;;0CAEjB,8OAAC;gCAAG,WAAU;0CAA8B;;;;;;0CAC5C,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAqB;;;;;;kDAClC,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC,8IAAA,CAAA,gBAAa;wDAAC,WAAU;;;;;;kEACzB,8OAAC;kEAAK;;;;;;;;;;;;0DAER,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC,8IAAA,CAAA,gBAAa;wDAAC,WAAU;;;;;;kEACzB,8OAAC;kEAAK;;;;;;;;;;;;0DAER,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC,8IAAA,CAAA,gBAAa;wDAAC,WAAU;;;;;;kEACzB,8OAAC;kEAAK;;;;;;;;;;;;0DAER,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC,8IAAA,CAAA,gBAAa;wDAAC,WAAU;;;;;;kEACzB,8OAAC;kEAAK;;;;;;;;;;;;0DAER,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC,8IAAA,CAAA,gBAAa;wDAAC,WAAU;;;;;;kEACzB,8OAAC;kEAAK;;;;;;;;;;;;;;;;;;;;;;;;0CAIZ,8OAAC;gCACC,SAAS,IAAM,kBAAkB;gCACjC,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;uCAEe","debugId":null}},
    {"offset": {"line": 2038, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/components/WalletConnect.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Image from 'next/image';\r\n\r\ninterface WalletProviderProps {\r\n  name: string;\r\n  icon: string;\r\n  downloadUrl: string;\r\n}\r\n\r\nconst walletProviders: WalletProviderProps[] = [\r\n  {\r\n    name: 'MetaMask',\r\n    icon: '/assets/metamask.jpg',\r\n    downloadUrl: 'https://metamask.io/download/'\r\n  },\r\n  {\r\n    name: 'Coinbase Wallet',\r\n    icon: '/assets/coinbase.jpg',\r\n    downloadUrl: 'https://www.coinbase.com/wallet/articles/getting-started-extension'\r\n  },\r\n  {\r\n    name: 'Sui Wallet',\r\n    icon: '/assets/sui.png',\r\n    downloadUrl: 'https://slush.app/?utm_source=suiwallet&utm_medium=popup&utm_campaign=slushLaunch'\r\n  }\r\n];\r\n\r\ninterface WalletConnectProps {\r\n  onAddressChange: (address: string | null) => void;\r\n}\r\n\r\nexport default function WalletConnect({ onAddressChange }: WalletConnectProps) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [connectedAddress, setConnectedAddress] = useState<string | null>(null);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  const checkIfWalletIsInstalled = (provider: string) => {\r\n    if (provider === 'MetaMask') {\r\n      return typeof window !== 'undefined' && typeof window.ethereum !== 'undefined';\r\n    }\r\n    // Add checks for other wallets as needed\r\n    return false;\r\n  };\r\n\r\n  const connectWallet = async (provider: string) => {\r\n    try {\r\n      setIsConnecting(true);\r\n      if (provider === 'MetaMask') {\r\n        if (!checkIfWalletIsInstalled(provider)) {\r\n          window.open(walletProviders[0].downloadUrl, '_blank');\r\n          return;\r\n        }\r\n\r\n        if (window.ethereum) {\r\n          const accounts = await window.ethereum.request({ \r\n            method: 'eth_requestAccounts' \r\n          });\r\n          \r\n          const address = accounts[0];\r\n          setConnectedAddress(address);\r\n          onAddressChange(address);\r\n          setShowModal(false);\r\n        } else {\r\n          console.error('Ethereum object is not available in the window.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    setConnectedAddress(null);\r\n    onAddressChange(null);\r\n  };\r\n\r\n  const formatAddress = (address: string) => {\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={connectedAddress ? disconnectWallet : () => setShowModal(true)}\r\n        className=\"flex items-center space-x-2 px-6 py-2 rounded-lg transition-all duration-200 \r\n          bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 \r\n          text-white font-medium shadow-sm hover:shadow-md\"\r\n      >\r\n        {connectedAddress ? (\r\n          <>\r\n            <span>{formatAddress(connectedAddress)}</span>\r\n            <span className=\"text-sm opacity-80\">(Disconnect)</span>\r\n          </>\r\n        ) : (\r\n          'Connect Wallet'\r\n        )}\r\n      </button>\r\n\r\n      <AnimatePresence>\r\n        {showModal && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4 z-50\"\r\n          >\r\n            <motion.div\r\n              initial={{ scale: 0.95, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              exit={{ scale: 0.95, opacity: 0 }}\r\n              className=\"bg-white rounded-2xl p-6 max-w-sm w-full relative\"\r\n            >\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600\"\r\n              >\r\n                ×\r\n              </button>\r\n              \r\n              <h3 className=\"text-xl font-semibold mb-4\">Connect Wallet</h3>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                Choose your preferred wallet provider to connect\r\n              </p>\r\n\r\n              <div className=\"space-y-3\">\r\n                {walletProviders.map((wallet) => (\r\n                  <button\r\n                    key={wallet.name}\r\n                    onClick={() => connectWallet(wallet.name)}\r\n                    disabled={isConnecting}\r\n                    className=\"w-full flex items-center space-x-3 p-4 rounded-xl border border-gray-200 \r\n                      hover:border-blue-500 hover:bg-blue-50 transition-all duration-200\"\r\n                  >\r\n                    <Image\r\n                      src={wallet.icon}\r\n                      alt={wallet.name}\r\n                      width={32}\r\n                      height={32}\r\n                      className=\"rounded-full\"\r\n                    />\r\n                    <span className=\"font-medium text-gray-900\">{wallet.name}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              <p className=\"mt-6 text-sm text-gray-500 text-center\">\r\n                New to Web3? Learn more about wallets\r\n              </p>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;;AAQA,MAAM,kBAAyC;IAC7C;QACE,MAAM;QACN,MAAM;QACN,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,aAAa;IACf;CACD;AAMc,SAAS,cAAc,EAAE,eAAe,EAAsB;IAC3E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,2BAA2B,CAAC;QAChC,IAAI,aAAa,YAAY;YAC3B,OAAO,gBAAkB,eAAe,OAAO,OAAO,QAAQ,KAAK;QACrE;QACA,yCAAyC;QACzC,OAAO;IACT;IAEA,MAAM,gBAAgB,OAAO;QAC3B,IAAI;YACF,gBAAgB;YAChB,IAAI,aAAa,YAAY;gBAC3B,IAAI,CAAC,yBAAyB,WAAW;oBACvC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,WAAW,EAAE;oBAC5C;gBACF;;YAcF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,mBAAmB;QACvB,oBAAoB;QACpB,gBAAgB;IAClB;IAEA,MAAM,gBAAgB,CAAC;QACrB,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IACxD;IAEA,qBACE;;0BACE,8OAAC;gBACC,SAAS,mBAAmB,mBAAmB,IAAM,aAAa;gBAClE,WAAU;0BAIT,iCACC;;sCACE,8OAAC;sCAAM,cAAc;;;;;;sCACrB,8OAAC;4BAAK,WAAU;sCAAqB;;;;;;;mCAGvC;;;;;;0BAIJ,8OAAC,yLAAA,CAAA,kBAAe;0BACb,2BACC,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAE;oBACtB,MAAM;wBAAE,SAAS;oBAAE;oBACnB,WAAU;8BAEV,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,OAAO;4BAAM,SAAS;wBAAE;wBACnC,SAAS;4BAAE,OAAO;4BAAG,SAAS;wBAAE;wBAChC,MAAM;4BAAE,OAAO;4BAAM,SAAS;wBAAE;wBAChC,WAAU;;0CAEV,8OAAC;gCACC,SAAS,IAAM,aAAa;gCAC5B,WAAU;0CACX;;;;;;0CAID,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;0CAIlC,8OAAC;gCAAI,WAAU;0CACZ,gBAAgB,GAAG,CAAC,CAAC,uBACpB,8OAAC;wCAEC,SAAS,IAAM,cAAc,OAAO,IAAI;wCACxC,UAAU;wCACV,WAAU;;0DAGV,8OAAC,6HAAA,CAAA,UAAK;gDACJ,KAAK,OAAO,IAAI;gDAChB,KAAK,OAAO,IAAI;gDAChB,OAAO;gDACP,QAAQ;gDACR,WAAU;;;;;;0DAEZ,8OAAC;gDAAK,WAAU;0DAA6B,OAAO,IAAI;;;;;;;uCAbnD,OAAO,IAAI;;;;;;;;;;0CAkBtB,8OAAC;gCAAE,WAAU;0CAAyC;;;;;;;;;;;;;;;;;;;;;;;;AASpE","debugId":null}},
    {"offset": {"line": 2252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/trustvote/trustvote/frontend/components/Bashboard.tsx"],"sourcesContent":["'use client';\r\nimport Elections from './Elections';\r\nimport Notification from './Notification';\r\nimport FAQ_Terms from './FAQ-Terms';\r\nimport React, { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Image from 'next/image';\r\nimport {\r\n  FiUser, FiShield, FiBell, FiBookOpen, FiMenu, FiLogOut,\r\n} from 'react-icons/fi';\r\nimport WalletConnect from './WalletConnect';\r\n\r\ninterface DashboardProps {\r\n  studentId: string;\r\n}\r\n\r\ntype NavItem = {\r\n  id: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n};\r\n\r\nconst navItems: NavItem[] = [\r\n  { id: 'user', label: 'User', icon: <FiUser size={20} /> },\r\n  { id: 'elections', label: 'Elections', icon: <FiShield size={20} /> },\r\n  { id: 'notifications', label: 'Notifications', icon: <FiBell size={20} /> },\r\n  { id: 'faq', label: 'FAQ / Terms', icon: <FiBookOpen size={20} /> },\r\n];\r\n\r\nexport default function Dashboard({ studentId }: DashboardProps) {\r\n  const [active, setActive] = useState<string>('user');\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const router = useRouter();\r\n\r\n  const handleLogout = () => router.push('/');\r\n\r\n  const renderMainContent = () => {\r\n    if (active === 'user') {\r\n      return (\r\n        <>\r\n          <h1 className=\"text-2xl font-bold mb-8\">Account Settings</h1>\r\n          <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n            <div className=\"flex items-center space-x-4 mb-6\">\r\n              <div className=\"w-16 h-16 rounded-full bg-gray-200 flex items-center justify-center\">\r\n                <span className=\"text-2xl font-bold text-gray-500\">S</span>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-xl font-bold text-gray-900\">{studentId}</h2>\r\n                <p className=\"text-sm text-gray-500\">Member since {new Date().toLocaleDateString()}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-8\">\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Index Number:\r\n                </label>\r\n                <p className=\"text-lg font-semibold\">{studentId}</p>\r\n              </div>\r\n\r\n              <div className=\"mt-8\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Wallet Address\r\n                </label>\r\n                <WalletConnect \r\n                  onAddressChange={(address) => {\r\n                    console.log('Wallet address changed:', address);\r\n                    // Handle address change here\r\n                  }}\r\n                /> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (active === 'elections') {\r\n      return <Elections />;\r\n    } else if (active === 'notifications') {\r\n      return <Notification />\r\n    } else if (active === 'faq') {\r\n      return <FAQ_Terms />\r\n    }\r\n    return (\r\n      <div className=\"bg-white p-6 rounded-xl shadow-sm\">\r\n        <p className=\"text-gray-600\">Content for {active} section</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-50\">\r\n      {/* Mobile sidebar overlay */}\r\n      <div \r\n        className={`fixed inset-0 bg-grey bg-opacity-50 z-40 lg:hidden transition-opacity ${\r\n          mobileOpen ? 'opacity-100 visible' : 'opacity-0 invisible'\r\n        }`}\r\n        onClick={() => setMobileOpen(false)}\r\n      />\r\n\r\n      {/* Mobile sidebar */}\r\n      <div \r\n        className={`fixed inset-y-0 left-0 w-64 bg-white z-50 transform lg:hidden transition-transform duration-200 ease-in-out ${\r\n          mobileOpen ? 'translate-x-0' : '-translate-x-full'\r\n        }`}\r\n      >\r\n        <div className=\"flex items-center justify-between h-16 px-6 border-b\">\r\n          <div className=\"flex items-center\">\r\n            <Image src=\"/assets/logo.jpg\" alt=\"Logo\" width={32} height={32} />\r\n            <span className=\"ml-2 text-xl text-gray-500 font-bold\">TrustVote</span>\r\n          </div>\r\n          <button onClick={() => setMobileOpen(false)} className=\"lg:hidden\">\r\n            <FiMenu size={24} />\r\n          </button>\r\n        </div>\r\n        <nav className=\"p-4 space-y-2\">\r\n          {navItems.map(item => (\r\n            <button\r\n              key={item.id}\r\n              onClick={() => {\r\n                setActive(item.id);\r\n                setMobileOpen(false);\r\n              }}\r\n              className={`w-full flex items-center space-x-3 p-3 rounded-lg transition-colors ${\r\n                active === item.id \r\n                  ? 'bg-blue-100 text-blue-600' \r\n                  : 'text-gray-700 hover:bg-gray-100'\r\n              }`}\r\n            >\r\n              {item.icon}\r\n              <span className=\"font-medium\">{item.label}</span>\r\n            </button>\r\n          ))}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Desktop sidebar */}\r\n      <aside className=\"hidden lg:block w-64 border-r border-gray-200 bg-white\">\r\n        <div className=\"flex items-center h-16 px-6 border-b\">\r\n          <Image src=\"/assets/logo.jpg\" alt=\"Logo\" width={32} height={32} />\r\n          <span className=\"ml-2 text-xl text-gray-700 font-bold\">TrustVote</span>\r\n        </div>\r\n        <nav className=\"p-4 space-y-2\">\r\n          {navItems.map(item => (\r\n            <button\r\n              key={item.id}\r\n              onClick={() => setActive(item.id)}\r\n              className={`w-full flex items-center space-x-3 p-3 rounded-lg transition-colors ${\r\n                active === item.id \r\n                  ? 'bg-blue-100 text-blue-600' \r\n                  : 'text-gray-700 hover:bg-gray-100'\r\n              }`}\r\n            >\r\n              {item.icon}\r\n              <span className=\"font-medium\">{item.label}</span>\r\n            </button>\r\n          ))}\r\n        </nav>\r\n      </aside>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n        <header className=\"h-16 bg-white border-b border-gray-200 flex items-center justify-between px-6\">\r\n          <button \r\n            onClick={() => setMobileOpen(true)} \r\n            className=\"lg:hidden\"\r\n          >\r\n            <FiMenu size={24} />\r\n          </button>\r\n          <h3 className=\"text-lg text-gray-500 font-semibold\">Dashboard</h3>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"flex items-center space-x-2 px-4 py-2 rounded-lg border border-gray-200 hover:bg-gray-100 transition-colors\"\r\n          >\r\n            <FiLogOut size={18} />\r\n            <span className='text-red-300'>Logout</span>\r\n          </button>\r\n        </header>\r\n\r\n        <main className=\"flex-1 overflow-auto p-6\">\r\n          {renderMainContent()}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}